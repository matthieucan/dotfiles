[color]
	ui = auto
[color "branch"]
	current = red
	local = yellow
	remote = green
[color "diff"]
	meta = cyan
	frag = magenta
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[color "grep"]
        filename = blue
        lineNumber = green
        match = red bold

[pager]
        log = colordiff | ~/bin/diff-highlight | less
        show = colordiff | ~/bin/diff-highlight | less
        diff = colordiff | ~/bin/diff-highlight | less

[alias]
	st = status
        who = shortlog -sne
        co = checkout
        cm = commit
        diffs = diff --staged
        lg = log --graph --abbrev-commit  --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar) %C(reset)%C(bold blue)%an %C(reset)%C(bold yellow)%d%C(reset)%n%C(white)%s%C(reset) %n %n%b'
        g = ! git --no-pager grep
        logg = ! git log $1 --pretty=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar) %C(reset)%C(bold blue)%an %C(reset)%C(bold yellow)%d%C(reset)%n%C(white)%s%C(reset) %n %n%bIMG:%ae' | gitcaca-display | less -
        showg = ! git show $1 --pretty=format:'commit %H%nAuthor: %an <%ae>%nDate: %ar%n%n%s%n%n%b%nIMG:%ae' | gitcaca-display -W 30 | less -
        diapo = ! git log $1 --pretty=format:'IMG:%ae' | sort | uniq | gitcaca-display -W 40 | less -
        # PR:
        # stolen from https://github.com/sunlightlabs/hacks/blob/master/topics/git/aliases.md 
        pr = "!f() { git fetch origin refs/pull/$1/head:pr/$1; git checkout pr/$1; git merge master; }; f"
        cleanup = "!f() { git branch -D `git branch | grep pr`; }; f"
        good = "!f() { x=$(git rev-parse --abbrev-ref HEAD); git checkout master; git merge $x; }; f"
        # Workflow is basically, check out the target branch, and run git pr 302 (where 302 is the number of a pull request).

[push]
	default = simple

[pull]
        rebase = true

[help]
	autocorrect = 20

[grep]
        lineNumber = true
